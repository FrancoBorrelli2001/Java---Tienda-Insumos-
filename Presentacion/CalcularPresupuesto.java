/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Persistencia.Conexion;
import static Presentacion.RegistrarInsumo.getConexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author fafos
 */
public class CalcularPresupuesto extends javax.swing.JFrame {
    
        PreparedStatement ps;
        private ResultSet rs;
            

    /**
     * Creates new form ListaClientes
     */
    DefaultTableModel m= new DefaultTableModel();
    String[] cadena = {"id", "cliente", "precio", "insumos"};
    
    public CalcularPresupuesto() {
        initComponents();
        this.setSize(1000, 1000);
        try
        {
            
            DefaultTableModel modelo = new DefaultTableModel();
            jtCliente.setModel(modelo);
            
            PreparedStatement psd = null;
            ResultSet rsd = null;
             Conexion conn = new Conexion();
              Connection con = conn.getConexion();
            
              String sql = "SELECT IDcliente, id, Precio, Tipo, Nombre FROM presupuesto";
              psd = con.prepareStatement(sql);
              rsd = psd.executeQuery();
              ResultSetMetaData rsdMd = rsd.getMetaData();
              int cantidadColumnas = rsdMd.getColumnCount();
              
              modelo.addColumn("IDcliente");
              modelo.addColumn("ID");
              modelo.addColumn("Precio");
              modelo.addColumn("Tipo");
              modelo.addColumn("Nombre");
              
              while(rsd.next()) {
                  Object[] filas = new Object[cantidadColumnas];
                  
                  for(int i = 0; i< cantidadColumnas; i++)
                  {
                      filas[i] = rsd.getObject(i + 1);  /*se suma porque i empieza en 0*/ 
                              
                  }
                  modelo.addRow(filas);
              }
              
        } catch(SQLException ex) {
            System.err.println(ex.toString());
            
        }           
        try
        {
            
            DefaultTableModel modelo = new DefaultTableModel();
            jtInsumos.setModel(modelo);
            
            PreparedStatement psd = null;
            ResultSet rsd = null;
             Conexion conn = new Conexion();
              Connection con = conn.getConexion();
            
              String sql = "SELECT id, Precio, Tipo, Nombre FROM insumos";
              psd = con.prepareStatement(sql);
              rsd = psd.executeQuery();
              ResultSetMetaData rsdMd = rsd.getMetaData();
              int cantidadColumnas = rsdMd.getColumnCount();
              
              modelo.addColumn("ID");
              modelo.addColumn("Precio");
              modelo.addColumn("Tipo");
              modelo.addColumn("Nombre");
              
              while(rsd.next()) {
                  Object[] filas = new Object[cantidadColumnas];
                  
                  for(int i = 0; i< cantidadColumnas; i++)
                  {
                      filas[i] = rsd.getObject(i + 1);  /*se suma porque i empieza en 0*/ 
                              
                  }
                  modelo.addRow(filas);
              }
              
        } catch(SQLException ex) {
            System.err.println(ex.toString());
            
        }           
        
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAñadir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtInsumos = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        cbxTipo = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        txtIDcliente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnActualizarInsumo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtCliente = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnCalcular = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        campoIDcliente = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 204, 255));

        btnAñadir.setBackground(new java.awt.Color(0, 0, 0));
        btnAñadir.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnAñadir.setForeground(new java.awt.Color(51, 204, 255));
        btnAñadir.setText("Añadir insumo al cliente");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });

        jtInsumos.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jtInsumos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Precio", "Tipo", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtInsumos);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Ingrese la ID del insumo:");

        txtId.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Nombre del insumo:");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Tipo:");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Precio:");

        txtPrecio.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(0, 0, 0));
        btnBuscar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(51, 204, 255));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        cbxTipo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cbxTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hardware", "Software" }));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Ingrese la ID del cliente:");

        txtIDcliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Insumos:");

        btnActualizarInsumo.setBackground(new java.awt.Color(0, 0, 0));
        btnActualizarInsumo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnActualizarInsumo.setForeground(new java.awt.Color(51, 204, 255));
        btnActualizarInsumo.setText("Actualizar");
        btnActualizarInsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarInsumoActionPerformed(evt);
            }
        });

        jtCliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jtCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID cliente", "ID insumo", "Precio", "Tipo", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtCliente);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Cliente:");

        btnActualizar.setBackground(new java.awt.Color(0, 0, 0));
        btnActualizar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(51, 204, 255));
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Ingrese ID del cliente al que quiere presupuestar:");

        btnCalcular.setBackground(new java.awt.Color(0, 0, 0));
        btnCalcular.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnCalcular.setForeground(new java.awt.Color(51, 204, 255));
        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(0, 0, 0));
        btnEliminar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(51, 204, 255));
        btnEliminar.setText("Eliminar insumo al cliente");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        campoIDcliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        campoIDcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoIDclienteActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Good Times", 1, 18)); // NOI18N
        jLabel9.setText("PRESUPUESTOS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnActualizarInsumo))
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAñadir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEliminar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoIDcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnCalcular))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnActualizar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIDcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(jLabel9)))
                .addContainerGap(427, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel9)
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnActualizarInsumo)
                        .addGap(91, 91, 91)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(btnBuscar)
                            .addComponent(txtIDcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cbxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAñadir)
                            .addComponent(btnEliminar))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(campoIDcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCalcular))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnActualizar)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(461, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoIDclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoIDclienteActionPerformed

    }//GEN-LAST:event_campoIDclienteActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try{
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();

            ps = con.prepareStatement("DELETE FROM presupuesto WHERE ID=?");

            ps.setInt(1, Integer.parseInt(txtId.getText()));

            int res = ps.executeUpdate();

            if(res > 0) {
                JOptionPane.showMessageDialog(null, "Insumo Eliminado");

            } else {
                JOptionPane.showMessageDialog(null, "Error al Eliminar");

            }

            con.close();

        } catch(Exception e){
            System.err.println(e);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed

        try{
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();

            ps = con.prepareStatement("Select sum(Precio) FROM presupuesto WHERE IDcliente=?");

            ps.setInt(1, Integer.parseInt(campoIDcliente.getText()));
            rs=ps.executeQuery();
            if(rs.next()){
                String sum=rs.getString("sum(Precio)");
                JOptionPane.showMessageDialog(null, "El presupuesto es:"+sum);

            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_btnCalcularActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        try
        {

            DefaultTableModel modelo = new DefaultTableModel();
            jtCliente.setModel(modelo);

            PreparedStatement psd = null;
            ResultSet rsd = null;
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();

            String sql = "SELECT IDcliente, ID, Precio, Tipo, Nombre FROM presupuesto";
            psd = con.prepareStatement(sql);
            rsd = psd.executeQuery();
            ResultSetMetaData rsdMd = rsd.getMetaData();
            int cantidadColumnas = rsdMd.getColumnCount();

            modelo.addColumn("IDcliente");
            modelo.addColumn("ID");
            modelo.addColumn("Precio");
            modelo.addColumn("Tipo");
            modelo.addColumn("Nombre");

            while(rsd.next()) {
                Object[] filas = new Object[cantidadColumnas];

                for(int i = 0; i< cantidadColumnas; i++)
                {
                    filas[i] = rsd.getObject(i + 1);  /*se suma porque i empieza en 0*/

                }
                modelo.addRow(filas);
            }

        } catch(SQLException ex) {
            System.err.println(ex.toString());

        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnActualizarInsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarInsumoActionPerformed
        try
        {

            DefaultTableModel modelo = new DefaultTableModel();
            jtInsumos.setModel(modelo);

            PreparedStatement psd = null;
            ResultSet rsd = null;
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();

            String sql = "SELECT id, Precio, Tipo, Nombre FROM insumos";
            psd = con.prepareStatement(sql);
            rsd = psd.executeQuery();
            ResultSetMetaData rsdMd = rsd.getMetaData();
            int cantidadColumnas = rsdMd.getColumnCount();

            modelo.addColumn("ID");
            modelo.addColumn("Precio");
            modelo.addColumn("Tipo");
            modelo.addColumn("Nombre");

            while(rsd.next()) {
                Object[] filas = new Object[cantidadColumnas];

                for(int i = 0; i< cantidadColumnas; i++)
                {
                    filas[i] = rsd.getObject(i + 1);  /*se suma porque i empieza en 0*/

                }
                modelo.addRow(filas);
            }

        } catch(SQLException ex) {
            System.err.println(ex.toString());

        }                   // TODO add your handling code here:
    }//GEN-LAST:event_btnActualizarInsumoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        try{
            Conexion conn = new Conexion();
            Connection con = conn.getConexion();

            ps = con.prepareStatement("SELECT * FROM insumos WHERE ID = ?");
            ps.setString(1, txtId.getText());

            rs = ps.executeQuery();

            if(rs.next()) {

                txtId.setText(rs.getString("ID"));
                txtPrecio.setText(rs.getString("Precio"));
                cbxTipo.setSelectedItem(rs.getString("Tipo"));
                txtNombre.setText(rs.getString("Nombre"));

            } else {
                JOptionPane.showMessageDialog(null,"ID del insumo incorrecta");
            }

        } catch(Exception e) {
            System.err.print(e);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioActionPerformed

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
        try{
            Connection con = null;
            con = getConexion();

            ps = con.prepareStatement("INSERT INTO presupuesto(IDcliente, ID, Precio, Tipo, Nombre) VALUES (?,?,?,?,?) ");
            ps.setString(1, txtIDcliente.getText());
            ps.setString(2, txtId.getText());
            ps.setString(3, txtPrecio.getText());
            ps.setString(4, cbxTipo.getSelectedItem().toString());
            ps.setString(5, txtNombre.getText());

            int res = ps.executeUpdate();

            if(res > 0) {
                JOptionPane.showMessageDialog(null, "Insumo añadido");

            } else {
                JOptionPane.showMessageDialog(null, "Error al añadir");

            }

            con.close();

        } catch(Exception e){
            System.err.println(e);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnAñadirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalcularPresupuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalcularPresupuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalcularPresupuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalcularPresupuesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalcularPresupuesto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnActualizarInsumo;
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JTextField campoIDcliente;
    private javax.swing.JComboBox cbxTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtCliente;
    private javax.swing.JTable jtInsumos;
    private javax.swing.JTextField txtIDcliente;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
